import{_ as i,p as a,f as n,h as t,M as e,q as s,S as c,aq as d,P as o}from"./vue-router-0bbd6486.js";const r={components:{}},h={class:"varlet-site-doc"},p=d('<h1>迁移指南</h1><div class="card"><h3>介绍</h3><p>本节主要介绍 <code>2.x</code> 版本相对于 <code>1.x</code> 版本的主要变化以及迁移的注意事项。</p></div><h2>组件库(@varlet/ui)</h2><div class="card"><h3>组件重构</h3><ul><li>Menu 组件进行了重做，优化了 api 使其变得更易使用，在桌面端也有更优秀的边界检测能力和性能。具体使用方式参考 <a href="./zh-CN/menu">Menu 文档</a>，</li><li>Select 组件的下拉菜单替换成了新版 Menu 组件</li><li>Pagination 组件的下拉菜单替换成了新版 Menu 组件</li><li>Loading 组件的默认颜色从 <code>currentColor</code> 更改为 <code>var(--color-primary)</code></li><li>Loading 组件暴露出 <code>var(--loading-color)</code></li><li>Button 组件新增 <code>loadingColor</code> 属性</li><li>Snackbar 组件新增 <code>loadingColor</code> 属性</li><li>Progress 组件新增 <code>labelClass</code> 属性</li><li>StyleProvider 组件新增 <code>tag</code> 属性，允许自定义容器标签</li><li>Cell 组件重命名了部分 api <code>desc</code> -&gt; <code>description</code>，<code>descClass</code> -&gt; <code>descriptionClass</code></li><li>DatePicker 组件重命名了部分 api <code>shadow</code> -&gt; <code>elevation</code></li><li>TimePicker 组件重命名了部分 api <code>shadow</code> -&gt; <code>elevation</code></li><li>Card 组件重命名了部分 api <code>height</code> -&gt; <code>image-height</code>，<code>content</code> -&gt; <code>floating-content</code></li><li>Col 组件新增 <code>direction</code> 属性</li><li>Dialog 组件新增 <code>width</code> 属性</li><li>Form 组件新增 <code>useForm</code> 和 <code>useValidation</code> 静态方法以提供自定义表单组件的能力</li></ul></div><div class="card"><h3>组件样式变量变更</h3><ul><li>Menu 组件变量新增 <code>--menu-background-color</code></li><li>Select 组件变量新增 <code>--select-select-min-height</code>，<code>--select-menu-margin-top</code></li><li>Pagination 组件变量新增 <code>--pagination-simple-padding</code></li><li>Loading 组件变量新增 <code>--loading-color</code></li><li>Rate 组件变量新增 <code>--rate-color</code></li><li>Counter 组件变量新增 <code>--counter-disabled-opacity</code></li><li>Slider 组件变量新增 <code>--slider-disabled-opacity</code></li><li>Switch 组件变量新增 <code>--switch-disabled-opacity</code></li><li>Cell 组件变量重命名 <code>--cell-desc-font-size</code> -&gt; <code>--cell-description-font-size</code>，<code>--cell-desc-color</code> -&gt; <code>--cell-description-color</code></li><li>Form 组件变量重命名 <code>--form-details-error-color</code> -&gt; <code>--form-details-error-message-color</code>， <code>--form-details-length-color</code> -&gt; <code>--form-details-extra-message-color</code></li></ul></div>',5),u={class:"card"},_=e("h3",null,"UMD 模块导出中英文语言包",-1),g=e("p",null,[o("在 "),e("code",null,"1.x"),o(" 版本中，UMD 模块不导出中英文语言包，在 "),e("code",null,"2.x"),o(" 版本中，我们将中英文语言包进行了导出， 非 UMD 模块现在有两种使用语言包的方式。")],-1),m=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-keyword"},"import"),o(" { Locale } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui'"),o(`
`),e("span",{class:"hljs-keyword"},"import"),o(" enUS "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui/es/locale/en-US'"),o(`

Locale.add(`),e("span",{class:"hljs-string"},"'en-US'"),o(`, enUS)
`)])],-1),v=e("p",null,"或",-1),j=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-keyword"},"import"),o(" { Locale } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui'"),o(`

Locale.add(`),e("span",{class:"hljs-string"},"'en-US'"),o(`, Locale.enUS)
`)])],-1),y={class:"card"},f=e("h3",null,"UMD 模块导出暗黑模式主题",-1),k=e("p",null,[o("在 "),e("code",null,"1.x"),o(" 版本中，UMD 模块不导出暗黑模式主题包，在 "),e("code",null,"2.x"),o(" 版本中，我们将暗黑模式主题包进行了导出， 非 UMD 模块现在有两种使用暗黑模式主题的方式。")],-1),w=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-keyword"},"import"),o(" { StyleProvider } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui'"),o(`
`),e("span",{class:"hljs-keyword"},"import"),o(" dark "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui/es/themes/dark'"),o(`

StyleProvider(dark)
`)])],-1),x=e("p",null,"或",-1),S=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-keyword"},"import"),o(" { StyleProvider, Themes } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui'"),o(`

StyleProvider(Themes.dark)
`)])],-1),C=d('<div class="card"><h3>移除 less 主题变量的支持</h3><p>如今 <code>css variable</code> 方案已经十分成熟，在 <code>2.x</code> 版本中不再支持 <code>less</code> 主题变量，这有利于减小包的发布体积。 如果您使用了在构建时替换 <code>less</code> 主题变量的方案，需要替换成 <code>css variable</code> 方案。</p></div>',1),M={class:"card"},b=e("h3",null,"Typescript 类型优化",-1),P=e("p",null,[o("我们对组件内部类型进行了重构，抽象了更多的类型并且暴露了出来，组件的类型规范依照"),e("code",null,"组件名"),o(" + "),e("code",null,"类型名"),o("的形式。使用方式如下所示:")],-1),U=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-keyword"},"import"),o(),e("span",{class:"hljs-keyword"},"type"),o(" { ButtonProps, ButtonType, ButtonSize } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui'"),o(`
`)])],-1),D=d('<div class="card"><h3>支持自动引入函数组件</h3><p>在 1.x 中，组件库只支持自动引入在模板中的声明式组件，函数组件 <code>(例如: Snackbar)</code> 仍然需要手动引入样式文件。 在 2.x 中，通过 <a href="https://github.com/antfu/unplugin-auto-import">unplugin-auto-import</a> 插件支持了函数组件的自动引入。 详情见<a href="#/zh-CN/importOnDemand">按需引入</a>。</p></div><h2>组件库快速成型工具(@varlet/cli)</h2><div class="card"><h3>命令重构</h3><ul><li>重构了 <code>gen</code> 和 <code>create</code> 命令，增加了 <code>sfc</code> 和 <code>tsx</code> 两种风格的模板选择，增加了国际化的选项，优化了命令行交互体验</li><li>重构了 <code>compile</code> 命令，编译后的包不再支持 <code>less</code> 变量</li><li>新增 <code>vite:dev</code> 和 <code>vite:build</code> 命令，对 <code>vite</code> 进行了基本的封装</li></ul></div><div class="card"><h3>文档相关</h3><ul><li>新的文档首页</li><li>优化了文档视觉</li><li>文档样式变量进行了一些重命名</li></ul></div>',4),L={class:"card"},T=e("h3",null,"其他改变",-1),N=e("ul",null,[e("li",null,[e("code",null,"Node.js"),o(" 版本锁定为 "),e("code",null,"^14.18.0 || >=16.0.0")]),e("li",null,[o("文档配置文件从 "),e("code",null,"varlet.config.js"),o(" -> "),e("code",null,"varlet.config.mjs")]),e("li",null,"内置方法引入方式改变")],-1),B=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-comment"},"// 1.x"),o(`
`),e("span",{class:"hljs-keyword"},"import"),o(" AppType "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/cli/site/mobile/components/AppType'"),o(`
`),e("span",{class:"hljs-keyword"},"import"),o(" { watchLang, watchDarkMode } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/cli/site/utils'"),o(`
`)])],-1),z=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-comment"},"// 2.x"),o(`
`),e("span",{class:"hljs-keyword"},"import"),o(" { AppType, watchLang, watchDarkMode } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/cli/client'"),o(`
`)])],-1);function V($,A,F,q,E,G){const l=a("var-site-code-example");return n(),t("div",h,[p,e("div",u,[_,g,s(l,{"playground-ignore":""},{default:c(()=>[m]),_:1}),v,s(l,{"playground-ignore":""},{default:c(()=>[j]),_:1})]),e("div",y,[f,k,s(l,{"playground-ignore":""},{default:c(()=>[w]),_:1}),x,s(l,{"playground-ignore":""},{default:c(()=>[S]),_:1})]),C,e("div",M,[b,P,s(l,{"playground-ignore":""},{default:c(()=>[U]),_:1})]),D,e("div",L,[T,N,s(l,null,{default:c(()=>[B]),_:1}),s(l,null,{default:c(()=>[z]),_:1})])])}const R=i(r,[["render",V]]);export{R as default};
